name: CI

on:
  push:
    tags:
      - "v*.*.*" # Aciona o pipeline para tags de versão como v1.0.0, v2.1.0, etc.

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"
      - run: yarn install
      - run: yarn test

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Docker Image
        run: |
          docker buildx build --push --tag victoralmeida92/liferay-challenge:v1.1 .

  trivy-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Install Trivy
        run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release -y
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo tee /etc/apt/trusted.gpg.d/trivy.asc
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy
      - name: Scan Docker Image for Vulnerabilities
        env:
          DOCKER_IMAGE: victoralmeida92/liferay-challenge:v1.1
        run: trivy image $DOCKER_IMAGE

  # O bloco abaixo seria utilizado para deployment no Kubernetes em um provedor de cloud
  # mas como não estamos utilizando nenhum provedor de cloud atualmente, ele está comentado.
  #
  # deploy:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up Helm
  #       uses: azure/setup-helm@v1
  #
  #     # Abaixo seria utilizado para autenticação no Kubernetes com KUBECONFIG,
  #     # porém, essa configuração depende de um provedor cloud que não está sendo utilizado.
  #     # - name: Set up KUBECONFIG
  #     #   run: echo "${{ secrets.KUBECONFIG }}" | base64 --decode > $HOME/.kube/config
  #
  #     - name: Helm Upgrade
  #       run: helm upgrade --install liferay-interview-challenge ./liferay-interview-challenge-chart \
  #             --namespace default --values ./liferay-interview-challenge-chart/values.yaml \
  #             --values ./liferay-interview-challenge-chart/values-${{ github.ref }}.yaml
